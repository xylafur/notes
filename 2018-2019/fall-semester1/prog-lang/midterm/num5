c++: list -> vector
    allocation:
        you can create a list either the stack or the heap.
        Using the new keyword will allocate memory from the heap

    manipulation:
        you can use a pointer to manipulate or pass around the vector in c++,
        you can also pass it in using the reference keyword

        the list can also be passed around by value if you want to.

    clean up:
        If you allocate the list from the heap then you will have to manually
        clean it up.

    array declaration example:
        stack
            int arr [50];
        heap:
            int arr [50] = new int [50];

    list declaration example:
        stack:
            std:vector<int> my_stack_vec;
        heap:
            std:vector<int> * myvec = new vector;

    list insert elements example:

    list delete elements example:


Java: list -> ArrayList
    allocation:
        Both ArrayLists and arrays are not simple data types, they cannot be
        stoed on the stack.  They must be allocated from the heap.

        Both are created using the new keyword

    manipulation:
        objects are passed into functions by reference implicitly, there is no
        way to pass them into a function by value.

    clean up:
        Java has garbage collection, which means as the programmer you do not
        free memory that you were granted from the heap.  WHen there is not
        enough free memory garabge collection will be invoked and release all
        unused heap memory.

        An ArrayList would definitely be more complicated to clean up due to
        the fact that it has more metadata than a regular array.  An array list
        will also have to constantly be cleaned up as its size is increased,
        the old array that was used to hold the previous data of the list will
        have to be freed.

    array declaration example:
        int [] arr = new int [50];

    list declaration example:
        std:vector myarr = new vector;

    list insert elements example:

    list delete elements example:




python: list -> list , no arrays
    allocation:
        In python everything is on the heap.  Lists will therefore be on the
        heap just like everything else.  There are no arrays in python.

    manipulation:
        lists are passed by reference implicitly in python, there is no way to
        pass them by value.

    clean up:
        The garbage collector will clean up unused objects when the python vm
        runs out of memory or drops below a particular treshold.

    array declaration example:
        There are no arrays in python (well you can use numpy but its not a
        python builtin)

    list declaration example:
        L = []

    list insert elements example:
        L.insert(1)

    list delete elements example:
        L.pop() or L.remove(1)


