Exam will be the 2nd or 3rd week of November
    he will let us know 3-4 weeks in advance

    he should have a firm date by monday

Homework 2:
    Will be in c++

Sebesta:
    this is a book that gives an overview of how to build a system interpreter
    or compiled language

    Describing Syntax and Semantics:
        we can define a syntax but then we have to figure out how to evaluate
        such expressoin

        The expressions in the language must have an unambigious definition:
            context free

            though this does happen, it needs to be minmized as much as
            possible

        syntax doesn't solve everything:
            we have to know where we are at in execution of the program for
            instance

        Syntax:
            form or structrre of expressions, statements, and program units

            program units:
                same concept as modules
                compartments of some sort
                could be libraries, classes whatever

            sentence:
                a string of characters over some alphabet

            language:
                set of senteneces

            lexeme:
                lowest level syntactic unit of a language
                *, sum, begin

                token is a category of lexemes

        Semantics:
            the meaning of expressions, statements and program units


        Language Definition:
            the actual implementation of a language
            
            the point of view of the programmer is important
                think about the user

        
            recognizers:
                recognition device that reads input strings over the alphabet
                of the language and decides whether the input strings belong to
                the language

                example:
                    syntax analysis part of a compiler

            generators:
                generates sentences of a language

                can determine if a syntax of a particular is correct by
                comparing it to the structure of the generator


        Grammars:
            CFG:
                language generators meant to describe the syntax of a natural
                language

            Backus-Naur Form:
                the equivalent to context-free grammars

                formed with non terminals and terminals

                LHS must be a terminal and the right hand side if a string of
                terminals and/or non terminals

                grammar:
                    a finite non-empty set of rules

                start symbol:
                    a special element of the nonterminals of a grammar


            Derivation:
                repeated application of rules, starting with the start symbol
                and ending with a sentence (all terminal symbols)

                every string of symbols in a derivation is a sentenial form

                sentance:
                    sentential form that has only terminal symbols

                leftmost derivation:
                    is one in which the most left non terminal in each
                    sentential form is the one that is explained
