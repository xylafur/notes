Functional Programming in Python
    functions that have no side effects are called purely funcitonal
        this is a requirement for homework 3

    Program correctness is based only on the input to the function
    
    Writing to a file and using IO are both considered side effects
        to be purely functional you can't have even these

    advantages of functinal programming
        formal provability
            through logic you can prove is something is working correctly
            

        modularity
            if a function is working, then it does its job - since it has no
            interactions with anything else it ouldbe called the purest form of
            module

        composability:
            having functions call other functions and such, most things can be
            represented in algebra

        ease of debugging and testing
            unit testing becomes testing


Iterators:
    continuously produces a new value

Binding:
    lambdas in python are a form of binding

    putting the definition of the function with whatever we bind it to
