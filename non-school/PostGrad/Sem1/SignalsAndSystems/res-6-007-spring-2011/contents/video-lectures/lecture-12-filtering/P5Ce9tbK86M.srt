1
00:00:00,040 --> 00:00:02,470
The following content is
provided under a Creative

2
00:00:02,470 --> 00:00:03,880
Commons license.

3
00:00:03,880 --> 00:00:06,920
Your support will help MIT
OpenCourseWare continue to

4
00:00:06,920 --> 00:00:10,570
offer high quality educational
resources for free.

5
00:00:10,570 --> 00:00:13,470
To make a donation or view
additional materials from

6
00:00:13,470 --> 00:00:17,400
hundreds of MIT courses, visit
MIT OpenCourseWare at

7
00:00:17,400 --> 00:00:18,650
ocw.mit.edu.

8
00:00:55,619 --> 00:00:58,000
PROFESSOR: In discussing
the continuous-time and

9
00:00:58,000 --> 00:01:01,540
discrete-time Fourier
transforms, we developed a

10
00:01:01,540 --> 00:01:04,050
number of important
properties.

11
00:01:04,050 --> 00:01:07,230
Two particularly significant
ones, as I mentioned at the

12
00:01:07,230 --> 00:01:10,490
time, are the modulation
property and

13
00:01:10,490 --> 00:01:12,860
the convolution property.

14
00:01:12,860 --> 00:01:15,760
Starting with the next lecture,
the one after this

15
00:01:15,760 --> 00:01:19,190
one, we'll be developing and
exploiting some of the

16
00:01:19,190 --> 00:01:22,260
consequences of the modulation
property.

17
00:01:22,260 --> 00:01:27,620
In today's lecture though, I'd
like to review and expand on

18
00:01:27,620 --> 00:01:31,100
the notion of filtering, which,
as I had mentioned,

19
00:01:31,100 --> 00:01:36,700
flows more or less directly from
the convolution property.

20
00:01:36,700 --> 00:01:39,820
To begin, let me just quickly
review what the convolution

21
00:01:39,820 --> 00:01:41,260
property is.

22
00:01:41,260 --> 00:01:45,780
Both for continuous-time and
for discrete-time, the

23
00:01:45,780 --> 00:01:51,400
convolution property tells us
that the Fourier transform of

24
00:01:51,400 --> 00:01:56,400
the convolution of two time
functions is the product of

25
00:01:56,400 --> 00:01:59,190
the Fourier transforms.

26
00:01:59,190 --> 00:02:04,450
Now, what this means in terms
of linear time-invariant

27
00:02:04,450 --> 00:02:08,889
filters, since we know that in
the time domain the output of

28
00:02:08,889 --> 00:02:12,890
a linear time-invariant filter
is the convolution of the

29
00:02:12,890 --> 00:02:17,080
input and the impulse response,
it says essentially

30
00:02:17,080 --> 00:02:20,790
then in the frequency domain
that the Fourier transform of

31
00:02:20,790 --> 00:02:24,740
the output is the product the
Fourier transform of the

32
00:02:24,740 --> 00:02:28,500
impulse response, namely the
frequency response, and the

33
00:02:28,500 --> 00:02:31,850
Fourier transform
of the input.

34
00:02:31,850 --> 00:02:36,370
So the output is described
through that product.

35
00:02:36,370 --> 00:02:40,760
Now, recall also that in
developing the Fourier

36
00:02:40,760 --> 00:02:45,250
transform, I interpreted the
Fourier transform as the

37
00:02:45,250 --> 00:02:49,320
complex amplitude of a
decomposition of the signal in

38
00:02:49,320 --> 00:02:52,120
terms of a set of complex
exponentials.

39
00:02:52,120 --> 00:02:55,230
And the frequency response or
the convolution property, in

40
00:02:55,230 --> 00:03:01,560
effect, tells us how to modify
the amplitudes of each of

41
00:03:01,560 --> 00:03:05,320
those complex exponentials as
they go through the system.

42
00:03:05,320 --> 00:03:09,190
Now, this led to the notion of
filtering, where the basic

43
00:03:09,190 --> 00:03:14,780
concept was that since we can
modify the amplitudes of each

44
00:03:14,780 --> 00:03:19,530
of the complex exponential
components separately, we can,

45
00:03:19,530 --> 00:03:23,370
for example, retain
some of them and

46
00:03:23,370 --> 00:03:25,040
totally eliminate others.

47
00:03:25,040 --> 00:03:27,810
And this is the basic
notion of filtering.

48
00:03:27,810 --> 00:03:33,000
So we have, as you recall, first
of all the notion in

49
00:03:33,000 --> 00:03:38,190
continuous-time of an ideal
filter, for example, I

50
00:03:38,190 --> 00:03:43,730
illustrate here an ideal lowpass
filter where we pass

51
00:03:43,730 --> 00:03:49,280
exactly frequency components in
one band and reject totally

52
00:03:49,280 --> 00:03:51,940
frequency components
in another band.

53
00:03:51,940 --> 00:03:54,620
The band being passed, of
course, referred to as the

54
00:03:54,620 --> 00:04:00,030
passband, and the band rejected
as the stopband.

55
00:04:00,030 --> 00:04:02,220
I illustrated here
a lowpass filter.

56
00:04:02,220 --> 00:04:07,310
We can, of course, reject the
low frequencies and retain the

57
00:04:07,310 --> 00:04:08,930
high frequencies.

58
00:04:08,930 --> 00:04:14,150
And that then corresponds to
an ideal highpass filter.

59
00:04:14,150 --> 00:04:17,810
Or we can just retain
frequencies within a band.

60
00:04:17,810 --> 00:04:22,640
And so I show below what is
referred to commonly as a

61
00:04:22,640 --> 00:04:25,240
bandpass filter.

62
00:04:25,240 --> 00:04:29,560
Now, this is what the ideal
filters looked like for

63
00:04:29,560 --> 00:04:31,070
continuous-time.

64
00:04:31,070 --> 00:04:35,200
For discrete-time, we have
exactly the same situation.

65
00:04:35,200 --> 00:04:39,870
Namely, we have an ideal
discrete-time lowpass filter,

66
00:04:39,870 --> 00:04:43,820
which passes exactly frequencies
which are the low

67
00:04:43,820 --> 00:04:45,120
frequencies.

68
00:04:45,120 --> 00:04:48,080
Low frequencies, of course,
being around 0, and because of

69
00:04:48,080 --> 00:04:52,260
the periodicity, also
around 2pi.

70
00:04:52,260 --> 00:04:56,630
We show also an ideal
highpass filter.

71
00:04:56,630 --> 00:05:00,180
And a highpass filter, as I
indicated last time, passes

72
00:05:00,180 --> 00:05:02,740
frequencies around pi.

73
00:05:02,740 --> 00:05:10,280
And finally, below that, I show
an ideal bandpass filter

74
00:05:10,280 --> 00:05:16,210
passing frequencies someplace in
the range between 0 and pi.

75
00:05:16,210 --> 00:05:20,330
And recall also that the basic
difference between

76
00:05:20,330 --> 00:05:22,610
continuous-time a discrete-time
for these

77
00:05:22,610 --> 00:05:26,240
filters is that the
discrete-time versions are, of

78
00:05:26,240 --> 00:05:29,960
course, periodic in frequency.

79
00:05:29,960 --> 00:05:34,600
Now, let's look at these ideal
filters, and in particular the

80
00:05:34,600 --> 00:05:39,320
ideal lowpass filter
in the time domain.

81
00:05:39,320 --> 00:05:45,290
We have the frequency response
of the ideal lowpass filter.

82
00:05:45,290 --> 00:05:49,580
And shown below it is the
impulse response.

83
00:05:49,580 --> 00:05:54,270
So here is the frequency
response and below it the

84
00:05:54,270 --> 00:05:59,020
impulse response of the
ideal lowpass filter.

85
00:05:59,020 --> 00:06:02,270
And this, of course,
is a sine x over x

86
00:06:02,270 --> 00:06:04,270
form of impulse response.

87
00:06:04,270 --> 00:06:08,820
And recognize also or recall
that since this frequency

88
00:06:08,820 --> 00:06:14,890
response is real-valued, the
impulse response, in other

89
00:06:14,890 --> 00:06:19,150
words, the inverse transform is
an even function of time.

90
00:06:19,150 --> 00:06:24,840
And notice also, since I want
to refer back to this, that

91
00:06:24,840 --> 00:06:29,270
the impulse response of an ideal
lowpass filter, in fact,

92
00:06:29,270 --> 00:06:30,530
is non-causal.

93
00:06:30,530 --> 00:06:33,420
That follows, from among other
things, from the fact that

94
00:06:33,420 --> 00:06:34,940
it's an even function.

95
00:06:34,940 --> 00:06:39,160
But keep in mind, in fact, that
a sine x over x function

96
00:06:39,160 --> 00:06:41,680
goes off to infinity
in both directions.

97
00:06:41,680 --> 00:06:45,720
So the impulse response of the
ideal lowpass filter is

98
00:06:45,720 --> 00:06:49,920
symmetric and continues to have
tails off to plus and

99
00:06:49,920 --> 00:06:52,680
minus infinity.

100
00:06:52,680 --> 00:06:56,850
Now, the situation is basically
the same in the

101
00:06:56,850 --> 00:06:59,610
discrete-time case.

102
00:06:59,610 --> 00:07:03,340
Let's look at the frequency
response and associated

103
00:07:03,340 --> 00:07:08,200
impulse response for an ideal
discrete-time lowpass filter.

104
00:07:08,200 --> 00:07:13,940
So once again, here is the
frequency response of the

105
00:07:13,940 --> 00:07:16,230
ideal lowpass filter.

106
00:07:16,230 --> 00:07:20,000
And below what I show the
impulse response.

107
00:07:20,000 --> 00:07:24,690
Again, it's a sine x over x
type of impulse response.

108
00:07:24,690 --> 00:07:30,290
And again, we recognize that
since in the frequency domain,

109
00:07:30,290 --> 00:07:34,760
this frequency response
is real-valued.

110
00:07:34,760 --> 00:07:39,060
That means, as a consequence
of the properties of the

111
00:07:39,060 --> 00:07:43,240
Fourier transform and inverse
Fourier transform, that the

112
00:07:43,240 --> 00:07:47,800
impulse response is an even
function in the time domain.

113
00:07:47,800 --> 00:07:52,180
And also, incidentally, the sine
x over x function goes

114
00:07:52,180 --> 00:07:54,270
off to infinity, again,
in both directions.

115
00:07:56,790 --> 00:08:01,650
Now, we've talked about ideal
filters in this discussion.

116
00:08:01,650 --> 00:08:05,150
And ideal filters all
are, in fact, ideal

117
00:08:05,150 --> 00:08:06,960
in a certain sense.

118
00:08:06,960 --> 00:08:10,550
What they do ideally is they
pass a certain band of

119
00:08:10,550 --> 00:08:16,060
frequencies exactly and
they reject a band

120
00:08:16,060 --> 00:08:19,010
of frequencies exactly.

121
00:08:19,010 --> 00:08:21,900
On the other hand, there are
many filtering problems in

122
00:08:21,900 --> 00:08:26,330
which, generally, we don't
have a sharp distinction

123
00:08:26,330 --> 00:08:28,670
between the frequencies we
want to pass and the

124
00:08:28,670 --> 00:08:31,260
frequencies we want to reject.

125
00:08:31,260 --> 00:08:34,990
One example of this that's
elaborated on in the text is

126
00:08:34,990 --> 00:08:37,610
the design of an automotive
suspension system, which, in

127
00:08:37,610 --> 00:08:42,490
fact, is the design of
a lowpass filter.

128
00:08:42,490 --> 00:08:46,550
And basically what you want to
do in a case like that is

129
00:08:46,550 --> 00:08:51,920
filter out or attenuate very
rapid road variations and keep

130
00:08:51,920 --> 00:08:56,020
the lower variations in, of
course, elevation of the

131
00:08:56,020 --> 00:08:58,350
highway or road.

132
00:08:58,350 --> 00:09:02,250
And what you can see intuitively
is that there

133
00:09:02,250 --> 00:09:05,910
isn't really a very sharp
distinction or sharp cut-off

134
00:09:05,910 --> 00:09:08,670
between what you would logically
call the low

135
00:09:08,670 --> 00:09:13,220
frequencies and what you would
call the high frequencies.

136
00:09:13,220 --> 00:09:18,000
Now, also somewhat related to
this is the fact that as we've

137
00:09:18,000 --> 00:09:22,350
seen in the time domain, these
ideal filters have a very

138
00:09:22,350 --> 00:09:24,300
particular kind of character.

139
00:09:24,300 --> 00:09:29,900
For example, let's look back at
the ideal lowpass filter.

140
00:09:29,900 --> 00:09:34,190
And we saw the impulse
response.

141
00:09:34,190 --> 00:09:37,090
The impulse response is what
we had shown here.

142
00:09:37,090 --> 00:09:41,860
Let's now look at the step
response of the discrete-time

143
00:09:41,860 --> 00:09:44,110
ideal lowpass filter.

144
00:09:44,110 --> 00:09:47,590
And notice the fact that it has
a tail that oscillates.

145
00:09:47,590 --> 00:09:50,300
And when the step hits,
in fact, it has

146
00:09:50,300 --> 00:09:52,720
an oscillatory behavior.

147
00:09:52,720 --> 00:09:57,670
Now, exactly the same
situation occurs in

148
00:09:57,670 --> 00:09:59,100
continuous-time.

149
00:09:59,100 --> 00:10:03,650
Let's look at the step
response of the

150
00:10:03,650 --> 00:10:07,310
continuous-time ideal
lowpass filter.

151
00:10:07,310 --> 00:10:12,540
And what we see is that when a
step hits then, in fact, we

152
00:10:12,540 --> 00:10:14,480
get an oscillation.

153
00:10:14,480 --> 00:10:18,740
And very often, that oscillation
is something

154
00:10:18,740 --> 00:10:19,670
that's undesirable.

155
00:10:19,670 --> 00:10:22,460
For example, if you were
designing an automotive

156
00:10:22,460 --> 00:10:27,100
suspension system and you hit
a curve, which is a step

157
00:10:27,100 --> 00:10:31,740
input, in fact, you probably
would not like to have the

158
00:10:31,740 --> 00:10:38,260
automobile oscillating, dying
down in oscillation.

159
00:10:38,260 --> 00:10:41,790
Now there's another very
important point, which again,

160
00:10:41,790 --> 00:10:43,620
we can see either in
continuous-time or

161
00:10:43,620 --> 00:10:49,200
discrete-time, which is that
even if we want it to have an

162
00:10:49,200 --> 00:10:54,880
ideal filter, the ideal filter
has another problem if we want

163
00:10:54,880 --> 00:10:57,960
to attempt to implement
it in real time.

164
00:10:57,960 --> 00:10:59,180
What's the problem?

165
00:10:59,180 --> 00:11:04,420
The problem is that since the
impulse response is even and,

166
00:11:04,420 --> 00:11:08,410
in fact, has tails that go off
to plus and minus infinity,

167
00:11:08,410 --> 00:11:10,190
it's non-causal.

168
00:11:10,190 --> 00:11:15,320
So if, in fact, we want to build
a filter and the filter

169
00:11:15,320 --> 00:11:20,290
is restricted to operate in real
time, then, in fact, we

170
00:11:20,290 --> 00:11:23,920
can't build an ideal filter.

171
00:11:23,920 --> 00:11:28,080
So what that says is that, in
practice, although ideal

172
00:11:28,080 --> 00:11:32,260
filters are nice to think about
and perhaps relate to

173
00:11:32,260 --> 00:11:37,780
practical problems, more
typically what we consider are

174
00:11:37,780 --> 00:11:43,780
nonideal filters and in the
discrete-time case, a nonideal

175
00:11:43,780 --> 00:11:48,850
filter then we would have a
characteristic somewhat like

176
00:11:48,850 --> 00:11:50,430
I've indicated here.

177
00:11:50,430 --> 00:11:55,300
Where instead of a very rapid
transition from passband to

178
00:11:55,300 --> 00:12:00,330
stopband, there would be a more
gradual transition with a

179
00:12:00,330 --> 00:12:06,960
passband cutoff frequency and
a stopband cutoff frequency.

180
00:12:06,960 --> 00:12:11,170
And perhaps also instead of
having an exactly flat

181
00:12:11,170 --> 00:12:15,210
characteristic in the stopband
in the passband, we would

182
00:12:15,210 --> 00:12:18,180
allow a certain amount
of ripple.

183
00:12:18,180 --> 00:12:23,350
We also have exactly the same
situation in continuous-time,

184
00:12:23,350 --> 00:12:27,560
where here we'll just simply
change our frequency axis to a

185
00:12:27,560 --> 00:12:30,480
continuous frequency axis
instead of the discrete

186
00:12:30,480 --> 00:12:31,920
frequency axis.

187
00:12:31,920 --> 00:12:35,460
Again, we would think in terms
of an allowable passband

188
00:12:35,460 --> 00:12:41,910
ripple, a transition from
passband to stopband with a

189
00:12:41,910 --> 00:12:46,940
passband cutoff frequency and
a stopband cutoff frequency.

190
00:12:46,940 --> 00:12:52,120
So the notion here is that,
again, ideal filters are ideal

191
00:12:52,120 --> 00:12:55,100
in some respects, not ideal
in other respects.

192
00:12:55,100 --> 00:12:57,850
And for many practical
problems, we

193
00:12:57,850 --> 00:12:59,360
may not want them.

194
00:12:59,360 --> 00:13:02,400
And even if we did want them,
we may not be able to get

195
00:13:02,400 --> 00:13:06,280
them, perhaps because of this
issue of causality.

196
00:13:06,280 --> 00:13:11,050
Even if causality is not an
issue, what happens in filter

197
00:13:11,050 --> 00:13:16,660
design and implementation, in
fact, is that the sharper you

198
00:13:16,660 --> 00:13:20,720
attempt to make the cutoff, the
more expensive, in some

199
00:13:20,720 --> 00:13:24,460
sense, the filter becomes,
either in terms of components,

200
00:13:24,460 --> 00:13:27,960
in continuous-time, or in
terms of computation in

201
00:13:27,960 --> 00:13:29,130
discrete-time.

202
00:13:29,130 --> 00:13:34,970
And so there are these whole
variety of issues that really

203
00:13:34,970 --> 00:13:37,990
make it important to
understand the

204
00:13:37,990 --> 00:13:41,790
notion nonideal filters.

205
00:13:41,790 --> 00:13:47,520
Now, just to illustrate as an
example, let me remind you of

206
00:13:47,520 --> 00:13:53,640
one example of what, in fact, is
a nonideal lowpass filter.

207
00:13:53,640 --> 00:13:57,820
And we have looked previously
at the associated

208
00:13:57,820 --> 00:13:59,660
differential equation.

209
00:13:59,660 --> 00:14:04,270
Let me now, in fact, relate
it to a circuit, and in

210
00:14:04,270 --> 00:14:08,730
particular an RC circuit, where
the output could either

211
00:14:08,730 --> 00:14:12,120
be across the capacitor
or the output can

212
00:14:12,120 --> 00:14:13,840
be across the resistor.

213
00:14:13,840 --> 00:14:16,340
So in effect, we have
two systems here.

214
00:14:16,340 --> 00:14:20,540
We have a system, which is the
system function from the

215
00:14:20,540 --> 00:14:24,490
voltage source input to the
capacitor output, the system

216
00:14:24,490 --> 00:14:29,450
from the voltage source input
to the resistor output.

217
00:14:29,450 --> 00:14:32,630
And, in fact, just applying
Kirchhoff's Voltage Law to

218
00:14:32,630 --> 00:14:35,840
this, we can relate those in
a very straightforward way.

219
00:14:35,840 --> 00:14:41,540
It's very straightforward to
verify that the system from

220
00:14:41,540 --> 00:14:46,430
input to resistor output is
simply the identity system

221
00:14:46,430 --> 00:14:51,480
with the capacitor output
subtracted from it.

222
00:14:51,480 --> 00:14:54,850
Now, we can write the
differential equation for

223
00:14:54,850 --> 00:14:59,360
either of these systems and, as
we talked about last time

224
00:14:59,360 --> 00:15:03,860
in the last several lectures,
solve that equation using and

225
00:15:03,860 --> 00:15:06,730
exploiting the properties of
the Fourier transform.

226
00:15:06,730 --> 00:15:11,790
And in fact, if we look at the
differential equation relating

227
00:15:11,790 --> 00:15:16,830
the capacitor output to the
voltage source input, we

228
00:15:16,830 --> 00:15:20,000
recognize that this is an
example that, in effect, we've

229
00:15:20,000 --> 00:15:21,740
solved previously.

230
00:15:21,740 --> 00:15:26,290
And so just working our way
down, applying the Fourier

231
00:15:26,290 --> 00:15:30,110
transform to the differential
equation and generating the

232
00:15:30,110 --> 00:15:34,500
system function by taking the
ratio of the capacitor voltage

233
00:15:34,500 --> 00:15:37,360
or its Fourier transform to the
Fourier transform of the

234
00:15:37,360 --> 00:15:42,030
source, we then have the system
function associated

235
00:15:42,030 --> 00:15:44,650
with the system for which
the output is

236
00:15:44,650 --> 00:15:46,550
the capacitor voltage.

237
00:15:46,550 --> 00:15:50,710
Or if we solve instead for the
system function associated

238
00:15:50,710 --> 00:15:54,450
with the resistor output,
we can simply

239
00:15:54,450 --> 00:15:57,390
subtract H1 from unity.

240
00:15:57,390 --> 00:16:00,510
And the system function that
we get in that case is the

241
00:16:00,510 --> 00:16:03,040
system function that
I show here.

242
00:16:03,040 --> 00:16:07,510
So we have, now, two system
functions, one for the

243
00:16:07,510 --> 00:16:11,480
capacitor output, the other
for the resistor output.

244
00:16:11,480 --> 00:16:15,540
And one, the first,
corresponding to the capacitor

245
00:16:15,540 --> 00:16:20,520
output, in fact, if we plot it
on a linear amplitude scale,

246
00:16:20,520 --> 00:16:21,430
looks like this.

247
00:16:21,430 --> 00:16:24,760
And as you can see, and as
we saw last time, is an

248
00:16:24,760 --> 00:16:27,630
approximation to a
lowpass filter.

249
00:16:27,630 --> 00:16:33,000
It is, in fact, and nonideal
lowpass filter, whereas the

250
00:16:33,000 --> 00:16:37,920
resistor output is an
approximation to a highpass

251
00:16:37,920 --> 00:16:42,200
filter, or in effect, a nonideal
highpass filter.

252
00:16:42,200 --> 00:16:46,230
So in one case, just comparing
the two, we have a lowpass

253
00:16:46,230 --> 00:16:50,210
filter as the capacitor output
associated with the capacitor

254
00:16:50,210 --> 00:16:53,700
output, and a highpass filter
associated with

255
00:16:53,700 --> 00:16:56,100
the resistor output.

256
00:16:56,100 --> 00:17:00,110
Let's just quickly look at that
example now, looking on a

257
00:17:00,110 --> 00:17:05,069
Bode plot, instead of
on the linear scale

258
00:17:05,069 --> 00:17:06,640
that we showed before.

259
00:17:06,640 --> 00:17:11,119
And recall incidentally, and be
aware incidentally, of the

260
00:17:11,119 --> 00:17:16,380
fact that we can, of course,
cascade several filters of

261
00:17:16,380 --> 00:17:18,940
this type and improve
the characteristics.

262
00:17:18,940 --> 00:17:28,040
So I have shown at the top
a Bode plot of the system

263
00:17:28,040 --> 00:17:30,940
function associated with
the capacitor output.

264
00:17:30,940 --> 00:17:35,810
It's flat out to a frequency
corresponding to 1 over the

265
00:17:35,810 --> 00:17:38,590
time constant, RC.

266
00:17:38,590 --> 00:17:43,820
And then it falls off at 10 dB
per decade, a decade being a

267
00:17:43,820 --> 00:17:45,640
factor of 10.

268
00:17:45,640 --> 00:17:49,390
Or if instead we look at the
system function associated

269
00:17:49,390 --> 00:17:54,300
with the resistor output, that
corresponds to a 10 dB per

270
00:17:54,300 --> 00:17:59,020
decade increase in frequency
up to approximately the

271
00:17:59,020 --> 00:18:02,510
reciprocal of the time constant,
and then approaching

272
00:18:02,510 --> 00:18:05,550
a flat characteristic
after that.

273
00:18:05,550 --> 00:18:11,400
And if we consider either one
of these, looking back again

274
00:18:11,400 --> 00:18:15,980
at the lowpass filter, if we
were to cascade several

275
00:18:15,980 --> 00:18:20,660
filters with this frequency
response, then because we have

276
00:18:20,660 --> 00:18:24,330
things plotted on a Bode plot,
the Bode plot for the cascade

277
00:18:24,330 --> 00:18:26,010
would simply be summing these.

278
00:18:26,010 --> 00:18:30,330
And so if we cascaded, for
example, two stages instead of

279
00:18:30,330 --> 00:18:34,210
a roll-off at 10 dB per decade,
it would roll off at

280
00:18:34,210 --> 00:18:37,780
20 dB per decade.

281
00:18:37,780 --> 00:18:42,100
Now, filters in this type, RC
filters, perhaps several of

282
00:18:42,100 --> 00:18:47,360
them in cascade, are in
fact very prevalent.

283
00:18:47,360 --> 00:18:53,465
And in fact, in an environment
like this, where we're, in

284
00:18:53,465 --> 00:19:00,150
fact, doing recording, we see
there are filters of that type

285
00:19:00,150 --> 00:19:03,790
that show up very commonly
both in the audio and the

286
00:19:03,790 --> 00:19:08,140
video portion of the signal
processing that's associated

287
00:19:08,140 --> 00:19:10,470
with making this set of tapes.

288
00:19:10,470 --> 00:19:14,350
In fact, let's take a look
in the control room.

289
00:19:14,350 --> 00:19:19,070
And what I'll be able to show
you in the control room is the

290
00:19:19,070 --> 00:19:23,200
audio portion of the processing
that's done and the

291
00:19:23,200 --> 00:19:26,890
kinds of filters, very much of
the type we just talked about,

292
00:19:26,890 --> 00:19:30,560
that are associated with the
signal processing that's done

293
00:19:30,560 --> 00:19:33,140
in preparing the audio
for the tapes.

294
00:19:33,140 --> 00:19:36,120
So let's just take a walk
into the control room

295
00:19:36,120 --> 00:19:37,370
and see what we see.

296
00:19:40,110 --> 00:19:42,280
This is the control room that's

297
00:19:42,280 --> 00:19:44,260
used for camera switching.

298
00:19:44,260 --> 00:19:48,210
It's used for computer editing
and also audio control.

299
00:19:48,210 --> 00:19:51,150
You can see the monitors,
and these are used

300
00:19:51,150 --> 00:19:53,090
for the camera switching.

301
00:19:53,090 --> 00:19:56,870
And this is the computer editing
console that's used

302
00:19:56,870 --> 00:19:59,890
for online and offline
computer editing.

303
00:19:59,890 --> 00:20:02,520
What I really want to
demonstrate though, in the

304
00:20:02,520 --> 00:20:06,760
context of the lecture is the
audio control panel, which

305
00:20:06,760 --> 00:20:10,680
contains, among other things, a
variety of filters for high

306
00:20:10,680 --> 00:20:13,280
frequency, low frequencies,
et cetera, basically

307
00:20:13,280 --> 00:20:15,280
equalization filters.

308
00:20:15,280 --> 00:20:20,380
And what we have in the way of
filtering is, first of all,

309
00:20:20,380 --> 00:20:23,390
what's referred to as a graphic
equalizer, which

310
00:20:23,390 --> 00:20:26,500
consists of a set of bandpass
filters, which I'll describe a

311
00:20:26,500 --> 00:20:28,340
little more carefully
in a minute.

312
00:20:28,340 --> 00:20:32,820
And then also, an audio control
panel, which is down

313
00:20:32,820 --> 00:20:36,350
here and which contains separate
equalizer circuits

314
00:20:36,350 --> 00:20:39,860
for each of a whole set of
channels and also lots of

315
00:20:39,860 --> 00:20:41,170
controls on them.

316
00:20:41,170 --> 00:20:46,690
Well, let me begin in the
demonstration by demonstrating

317
00:20:46,690 --> 00:20:51,380
a little bit of what the
graphic equalizer does.

318
00:20:51,380 --> 00:20:55,780
Well, what we have is a set
of bandpass filters.

319
00:20:55,780 --> 00:20:58,880
And what's indicated up here are
the center frequencies of

320
00:20:58,880 --> 00:21:02,430
the filters, and then a slider
switch for each one that lets

321
00:21:02,430 --> 00:21:04,570
us attenuate or amplify.

322
00:21:04,570 --> 00:21:06,550
And this is a dB scale.

323
00:21:06,550 --> 00:21:12,460
So essentially, if you look
across this bank of filters

324
00:21:12,460 --> 00:21:15,800
with the total output of the
equalizer just being the sum

325
00:21:15,800 --> 00:21:19,550
of the outputs from each of
these filters, interestingly

326
00:21:19,550 --> 00:21:22,320
the position of the slider
switches as you move across

327
00:21:22,320 --> 00:21:25,680
here, in effect, shows you what
the frequency response of

328
00:21:25,680 --> 00:21:27,090
the equalizer is.

329
00:21:27,090 --> 00:21:31,460
So you can change the overall
shaping of the filter by

330
00:21:31,460 --> 00:21:33,870
moving the switches
up and down.

331
00:21:33,870 --> 00:21:35,780
Right now the equalizer
is out.

332
00:21:35,780 --> 00:21:38,480
Let's put the equalizer
into the circuit.

333
00:21:38,480 --> 00:21:42,000
And now I put in this filtering
characteristic.

334
00:21:42,000 --> 00:21:45,910
And what I'd like to demonstrate
is filtering with

335
00:21:45,910 --> 00:21:49,240
this, when we do things that
are a little more dramatic

336
00:21:49,240 --> 00:21:51,560
than what would normally be
done in a typical audio

337
00:21:51,560 --> 00:21:53,250
recording setting.

338
00:21:53,250 --> 00:21:58,130
And to do this, let's add to my
voice some music to make it

339
00:21:58,130 --> 00:22:00,120
more interesting.

340
00:22:00,120 --> 00:22:02,340
Not that my voice isn't
interesting as it is.

341
00:22:02,340 --> 00:22:04,980
But in any case, let's
bring some music up.

342
00:22:04,980 --> 00:22:05,660
[MUSIC PLAYING]

343
00:22:05,660 --> 00:22:12,900
And now what I'll do is set
the low frequencies flat.

344
00:22:12,900 --> 00:22:18,430
And let me take out the high
frequencies above 800 cycles.

345
00:22:18,430 --> 00:22:21,160
And so now what we have,
effectively,

346
00:22:21,160 --> 00:22:23,940
is a lowpass filter.

347
00:22:23,940 --> 00:22:28,470
And now with the lowpass filter,
let me now bring the

348
00:22:28,470 --> 00:22:31,180
highs back up.

349
00:22:31,180 --> 00:22:35,310
And so I'm bringing up those
bandpass filters.

350
00:22:35,310 --> 00:22:39,490
And now let me cut
out the lows.

351
00:22:39,490 --> 00:22:43,230
And you'll hear the lows
disappearing and, in effect,

352
00:22:43,230 --> 00:22:47,200
keeping the highs in effectively
crispens the

353
00:22:47,200 --> 00:22:50,050
sound, either my voice
or the music.

354
00:22:50,050 --> 00:22:55,250
And finally, let me go back to
0 dB equalization on each of

355
00:22:55,250 --> 00:22:56,770
the filters.

356
00:22:56,770 --> 00:23:01,660
And what I'll also do now is
take the equalizer out of the

357
00:23:01,660 --> 00:23:02,910
circuit totally.

358
00:23:05,860 --> 00:23:10,490
Now, let's take a look at the
audio master control panel.

359
00:23:10,490 --> 00:23:15,000
And this panel has, of course,
for each channel and, for

360
00:23:15,000 --> 00:23:16,460
example, the channel
that we're working

361
00:23:16,460 --> 00:23:18,580
on, of a volume control.

362
00:23:18,580 --> 00:23:23,990
I can turn the volume down, and
I can turn the volume up.

363
00:23:23,990 --> 00:23:29,100
And it also has, for this
particular equalizer circuit,

364
00:23:29,100 --> 00:23:35,930
it has a set of three bandpass
filters and knobs which let us

365
00:23:35,930 --> 00:23:41,480
either put in up to 12 dB gain
or 12 dB attenuation in each

366
00:23:41,480 --> 00:23:44,990
of the bands, and also a
selector switch that lets us

367
00:23:44,990 --> 00:23:46,780
select the center the band.

368
00:23:46,780 --> 00:23:49,630
So let me just again
demonstrate a

369
00:23:49,630 --> 00:23:50,810
little bit with this.

370
00:23:50,810 --> 00:23:54,100
And let's get a close
up of this panel.

371
00:23:54,100 --> 00:23:57,450
So what we have, as
I indicated, is

372
00:23:57,450 --> 00:23:59,310
three bandpass filters.

373
00:23:59,310 --> 00:24:03,460
And these knobs that I'm
pointing to here are controls

374
00:24:03,460 --> 00:24:07,200
that allow us for each of the
filters to put in up to 12 dB

375
00:24:07,200 --> 00:24:10,310
gain or 12 dB attenuation.

376
00:24:10,310 --> 00:24:14,510
There are also with each of the
filters a selector switch

377
00:24:14,510 --> 00:24:18,000
that lets us adjust the center
frequency of the filter.

378
00:24:18,000 --> 00:24:21,660
Basically it's a two-position
switch.

379
00:24:21,660 --> 00:24:27,200
There also, as you can see, is
a button that let's us either

380
00:24:27,200 --> 00:24:28,830
put the equalization
in or out.

381
00:24:28,830 --> 00:24:31,290
Currently the equalization
is out.

382
00:24:31,290 --> 00:24:32,820
Let's put the equalization in.

383
00:24:32,820 --> 00:24:35,770
We won't hear any effect from
that, because the gain

384
00:24:35,770 --> 00:24:38,420
controls are all set at 0 dB.

385
00:24:38,420 --> 00:24:41,820
And I'll want to illustrate
shortly the effect of these.

386
00:24:41,820 --> 00:24:45,630
But before I do, let me draw
your attention to one other

387
00:24:45,630 --> 00:24:49,660
filter, which is this
white switch.

388
00:24:49,660 --> 00:24:55,870
And this switch is a highpass
filter that essentially cuts

389
00:24:55,870 --> 00:24:58,740
out frequencies below
about 100 cycles.

390
00:24:58,740 --> 00:25:02,510
So what it means is that if I
put this switch in, everything

391
00:25:02,510 --> 00:25:05,080
is more or less flat
above 100 cycles.

392
00:25:05,080 --> 00:25:09,960
And what that's used for,
basically, is to eliminate

393
00:25:09,960 --> 00:25:13,990
perhaps 60 cycle noise, if
that's present, or some low

394
00:25:13,990 --> 00:25:16,100
frequency hum or whatever.

395
00:25:16,100 --> 00:25:18,370
Well, we won't really
demonstrate

396
00:25:18,370 --> 00:25:19,780
anything with that.

397
00:25:19,780 --> 00:25:24,130
Let's [? go ?] now with the
equalization in, demonstrate

398
00:25:24,130 --> 00:25:28,250
the effect of boosting or
attenuating the low and high

399
00:25:28,250 --> 00:25:29,250
frequencies.

400
00:25:29,250 --> 00:25:33,030
And again, I think to
demonstrate this, it

401
00:25:33,030 --> 00:25:36,020
illustrates the point the
best if we have a

402
00:25:36,020 --> 00:25:37,110
little background music.

403
00:25:37,110 --> 00:25:39,750
So maestro, if you can
bring that up.

404
00:25:39,750 --> 00:25:41,050
[MUSIC PLAYING]

405
00:25:41,050 --> 00:25:45,330
And so now what I'm going to
do is first boost the low

406
00:25:45,330 --> 00:25:46,760
frequencies.

407
00:25:46,760 --> 00:25:50,040
And that's what this
potentiometer knob will do.

408
00:25:50,040 --> 00:25:54,980
So now, increasing the low
frequency gain and, in fact,

409
00:25:54,980 --> 00:25:58,720
all the way up to 12 dB when I
have the knob over as far as

410
00:25:58,720 --> 00:26:00,200
I've gone here.

411
00:26:00,200 --> 00:26:02,610
And so that has a very
bassy sound.

412
00:26:02,610 --> 00:26:06,370
And in fact, we can make it
even bassier by taking the

413
00:26:06,370 --> 00:26:11,230
high frequencies and attenuating
those by 12 dB.

414
00:26:15,930 --> 00:26:21,230
OK well, let's put some of the
high frequencies back in.

415
00:26:21,230 --> 00:26:26,300
And now let's turn the
low-frequency gain first

416
00:26:26,300 --> 00:26:30,080
back down to 0.

417
00:26:30,080 --> 00:26:32,560
And now we're back to
flat equalization.

418
00:26:32,560 --> 00:26:37,180
And now I can turn the low
frequency gain down so that I

419
00:26:37,180 --> 00:26:41,090
attenuate the low frequencies
by much as 12 dB.

420
00:26:41,090 --> 00:26:42,540
And that's where we are now.

421
00:26:42,540 --> 00:26:47,170
And so this has, of course,
a much crisper sound.

422
00:26:47,170 --> 00:26:51,984
And to enhance the highs even
more, I can, in addition to

423
00:26:51,984 --> 00:26:55,890
cutting out the lows, boost
the highs by putting in,

424
00:26:55,890 --> 00:26:57,140
again, as much as 12 dB.

425
00:27:00,410 --> 00:27:07,050
OK well, let's turn down the
music now and go back to no

426
00:27:07,050 --> 00:27:10,210
equalization by setting
these knobs to 0 dB.

427
00:27:10,210 --> 00:27:13,200
And in fact, we can take
the equalizer out.

428
00:27:13,200 --> 00:27:17,580
Well, that's a quick look at
some real-world filters.

429
00:27:17,580 --> 00:27:21,160
Now let's stop having so
much fun, and let's

430
00:27:21,160 --> 00:27:22,410
go back to the lecture.

431
00:27:29,150 --> 00:27:33,010
OK well, that's a little
behind-the-scenes look.

432
00:27:33,010 --> 00:27:37,070
What I'd like to do now is
turn our attention to

433
00:27:37,070 --> 00:27:39,130
discrete-time filters.

434
00:27:39,130 --> 00:27:45,720
And as I've meant in previous
lectures, there are basically

435
00:27:45,720 --> 00:27:50,810
two classes of discrete-time
filters or discrete-time

436
00:27:50,810 --> 00:27:53,280
difference equations.

437
00:27:53,280 --> 00:27:58,390
One class is referred to a
non-recursive or moving

438
00:27:58,390 --> 00:28:00,930
average filter.

439
00:28:00,930 --> 00:28:04,740
And the basic idea with a
moving average filter is

440
00:28:04,740 --> 00:28:07,840
something that perhaps you're
somewhat familiar with

441
00:28:07,840 --> 00:28:09,490
intuitively.

442
00:28:09,490 --> 00:28:14,520
Think of the notion of taking
a data sequence, and let's

443
00:28:14,520 --> 00:28:17,810
suppose that what we wanted to
do was apply some smoothing to

444
00:28:17,810 --> 00:28:19,290
the data sequence.

445
00:28:19,290 --> 00:28:23,220
We could, for example, think
of taking adjacent points,

446
00:28:23,220 --> 00:28:27,600
averaging them together, and
then moving that average along

447
00:28:27,600 --> 00:28:28,960
the data sequence.

448
00:28:28,960 --> 00:28:32,000
And what you can kind of see
intuitively is that that would

449
00:28:32,000 --> 00:28:34,020
apply some smoothing.

450
00:28:34,020 --> 00:28:36,720
So in fact, the difference
equation, let's say, for

451
00:28:36,720 --> 00:28:39,730
three-point moving average
would be the difference

452
00:28:39,730 --> 00:28:44,240
equation that I indicate here,
just simply taking a data

453
00:28:44,240 --> 00:28:49,340
point and the two data points
adjacent to it and forming an

454
00:28:49,340 --> 00:28:51,540
average of those three.

455
00:28:51,540 --> 00:28:55,260
So if we thought of the
processing involved, if we're

456
00:28:55,260 --> 00:29:00,530
forming an output sequence
value, we would take three

457
00:29:00,530 --> 00:29:02,240
adjacent points and
average them.

458
00:29:02,240 --> 00:29:06,440
That would give us the output
add the associated time.

459
00:29:06,440 --> 00:29:09,630
And then to compute the next
output point, we would just

460
00:29:09,630 --> 00:29:14,590
simply slide this by one point,
average these together,

461
00:29:14,590 --> 00:29:17,070
and that would give us the
next output point.

462
00:29:17,070 --> 00:29:20,900
And we would continue along,
just simply sliding and

463
00:29:20,900 --> 00:29:25,110
averaging to form the output
data sequence.

464
00:29:25,110 --> 00:29:29,490
Now, that's an example of what's
commonly referred to a

465
00:29:29,490 --> 00:29:31,370
three-point moving average.

466
00:29:31,370 --> 00:29:34,770
In fact, we can generalize
that notion

467
00:29:34,770 --> 00:29:36,110
in a number of ways.

468
00:29:36,110 --> 00:29:39,920
One way of generalizing the
notion of a moving average

469
00:29:39,920 --> 00:29:43,030
from the three-point moving
average, which I summarize

470
00:29:43,030 --> 00:29:47,110
again here, is to think of
extending that to a larger

471
00:29:47,110 --> 00:29:52,150
number of points, and in fact
applying weights to that as I

472
00:29:52,150 --> 00:29:56,090
indicated here, so that, in
addition to just summing up

473
00:29:56,090 --> 00:29:59,590
the points and dividing by the
number of points summed, we

474
00:29:59,590 --> 00:30:03,870
can, in fact, apply individual
weights to the points so that

475
00:30:03,870 --> 00:30:08,590
it's what is often referred to
as a weighting moving average.

476
00:30:08,590 --> 00:30:15,130
And I show below one possible
curve that might result, where

477
00:30:15,130 --> 00:30:19,450
these would be essentially the
weights associated with this

478
00:30:19,450 --> 00:30:21,410
weighted moving average.

479
00:30:21,410 --> 00:30:25,670
And in fact, it's easy to
verify that this indeed

480
00:30:25,670 --> 00:30:30,890
corresponds to the impulse
response of the filter.

481
00:30:30,890 --> 00:30:34,910
Well, just to cement this
notion, let me show you an

482
00:30:34,910 --> 00:30:36,580
example or two.

483
00:30:36,580 --> 00:30:41,410
Here is an example of a
five-point moving average.

484
00:30:41,410 --> 00:30:45,610
A five-point moving average
would have an impulse response

485
00:30:45,610 --> 00:30:50,510
that just consists of a
rectangle of length five.

486
00:30:50,510 --> 00:30:54,510
And if this is convolved with
a data sequence, that would

487
00:30:54,510 --> 00:30:57,880
correspond to taking five
adjacent points and, in

488
00:30:57,880 --> 00:30:59,870
effect, averaging them.

489
00:30:59,870 --> 00:31:02,890
We've looked previously at the
Fourier transform of this

490
00:31:02,890 --> 00:31:04,240
rectangular sequence.

491
00:31:04,240 --> 00:31:08,490
And the Fourier transform of
that, in fact, is of the form

492
00:31:08,490 --> 00:31:12,300
of a sine n x over
sine x curve.

493
00:31:12,300 --> 00:31:17,720
And as you can see, that is
some approximation to a

494
00:31:17,720 --> 00:31:18,860
lowpass filter.

495
00:31:18,860 --> 00:31:23,320
And so this, again, is the
impulse response and frequency

496
00:31:23,320 --> 00:31:28,430
response of a nonideal
lowpass filter.

497
00:31:28,430 --> 00:31:33,770
Now, there are a variety of
algorithms that, in fact, tell

498
00:31:33,770 --> 00:31:37,840
you how to choose the weights
associated with a weighted

499
00:31:37,840 --> 00:31:41,080
moving average to, in some
sense, design better

500
00:31:41,080 --> 00:31:45,060
approximations and without going
into the details of any

501
00:31:45,060 --> 00:31:46,510
of those algorithms.

502
00:31:46,510 --> 00:31:51,920
Let me just show the result of
choosing the weights for the

503
00:31:51,920 --> 00:31:58,610
design of a 251-point moving
average filter, where the

504
00:31:58,610 --> 00:32:02,430
weights are chosen using an
optimum algorithm to generate

505
00:32:02,430 --> 00:32:06,070
as sharp a cutoff as can
possibly be generated.

506
00:32:06,070 --> 00:32:11,750
And so what I show here is the
frequency response of the

507
00:32:11,750 --> 00:32:14,990
resulting filter on a
logarithmic amplitude scale

508
00:32:14,990 --> 00:32:17,560
and a linear frequency scale.

509
00:32:17,560 --> 00:32:20,860
Notice that on this scale, the
passband is very flat.

510
00:32:20,860 --> 00:32:23,500
Although here is an expanded
view of it.

511
00:32:23,500 --> 00:32:27,240
And in fact, it has what's
referred to as an equal-ripple

512
00:32:27,240 --> 00:32:29,350
characteristic.

513
00:32:29,350 --> 00:32:31,970
And then here is the
transition band.

514
00:32:31,970 --> 00:32:35,750
And here we have to stopband,
which in fact is down somewhat

515
00:32:35,750 --> 00:32:40,150
more than 80 dB and, again, has
what's referred to as an

516
00:32:40,150 --> 00:32:41,400
equal-ripple characteristic.

517
00:32:43,770 --> 00:32:48,470
Now, the notion of a moving
average for filtering is

518
00:32:48,470 --> 00:32:53,010
something that is very
commonly used.

519
00:32:53,010 --> 00:32:56,780
I had shown last time actually
the result of some filtering

520
00:32:56,780 --> 00:32:59,250
on a particular data
sequence, the Dow

521
00:32:59,250 --> 00:33:01,260
Jones Industrial Average.

522
00:33:01,260 --> 00:33:08,180
And very often, in looking at
various kinds of stock market

523
00:33:08,180 --> 00:33:13,810
publications, what you will see
is the Dow Jones average

524
00:33:13,810 --> 00:33:16,630
shown in its raw form
as a data sequence.

525
00:33:16,630 --> 00:33:21,780
And then very typically, you'll
see also the result of

526
00:33:21,780 --> 00:33:25,520
a moving average, where the
moving average might be on the

527
00:33:25,520 --> 00:33:28,930
order of day, or it might be
on the order of months.

528
00:33:28,930 --> 00:33:32,950
The whole notion being to take
some of the random high

529
00:33:32,950 --> 00:33:36,900
frequency fluctuations out of
the average and show the low

530
00:33:36,900 --> 00:33:43,060
frequency, or trends, over
some period of time.

531
00:33:43,060 --> 00:33:46,940
So let's, in fact, go back
to the Dow Jones average.

532
00:33:46,940 --> 00:33:52,450
And let me now show you what the
result of filtering with a

533
00:33:52,450 --> 00:33:56,330
moving average filter would
look like on the same Dow

534
00:33:56,330 --> 00:33:58,040
Jones industrial average
sequence that

535
00:33:58,040 --> 00:34:00,580
I showed last time.

536
00:34:00,580 --> 00:34:05,340
So once again, we have the Dow
Jones average from 1927 to

537
00:34:05,340 --> 00:34:07,380
roughly 1932.

538
00:34:07,380 --> 00:34:10,460
At the top, we see the
impulse response

539
00:34:10,460 --> 00:34:12,080
for the moving average.

540
00:34:12,080 --> 00:34:15,790
Again, I remind you on an
expanded time scale, and

541
00:34:15,790 --> 00:34:18,030
what's shown here is
the moving average

542
00:34:18,030 --> 00:34:19,630
with just one point.

543
00:34:19,630 --> 00:34:24,340
So the output on the bottom
trace is just simply identical

544
00:34:24,340 --> 00:34:25,790
to the input.

545
00:34:25,790 --> 00:34:28,000
Now, let's increase the
length of the moving

546
00:34:28,000 --> 00:34:29,389
average to two points.

547
00:34:29,389 --> 00:34:32,889
And we see that there is a small
amount of smoothing,

548
00:34:32,889 --> 00:34:34,690
three points and just
a little more

549
00:34:34,690 --> 00:34:37,489
smoothing, that gets inserted.

550
00:34:37,489 --> 00:34:43,590
Now a four-point moving
average, and next the

551
00:34:43,590 --> 00:34:47,710
five-point moving average,
and a six-point

552
00:34:47,710 --> 00:34:49,320
moving average next.

553
00:34:49,320 --> 00:34:51,690
And we see that the smoothing
increases.

554
00:34:51,690 --> 00:34:54,639
Now, let's increase the length
of the moving average filter

555
00:34:54,639 --> 00:35:00,310
much more rapidly and watch
how the output is more and

556
00:35:00,310 --> 00:35:03,340
more smooth in relation
to the input.

557
00:35:03,340 --> 00:35:07,620
Again, I emphasize that the
time scale for the impulse

558
00:35:07,620 --> 00:35:11,890
response is significantly
expanded in relationship to

559
00:35:11,890 --> 00:35:16,450
the time scale for both the
input and the output.

560
00:35:16,450 --> 00:35:20,000
And once again, through the
magic of filtering, we've been

561
00:35:20,000 --> 00:35:23,240
able to eliminate the 1929
Stock Market Crash.

562
00:35:26,530 --> 00:35:30,490
All right, so we've seen moving
average filters, or

563
00:35:30,490 --> 00:35:35,520
what are sometimes referred to
as non-recursive filters.

564
00:35:35,520 --> 00:35:39,580
And they are, as I stressed,
a very important class of

565
00:35:39,580 --> 00:35:41,880
discrete-time filters.

566
00:35:41,880 --> 00:35:45,550
Another very important class of
discrete-time filters are

567
00:35:45,550 --> 00:35:49,530
what are referred to as
recursive filters.

568
00:35:49,530 --> 00:35:53,320
Recursive filters are filters
for which the difference

569
00:35:53,320 --> 00:35:58,850
equation has feedback from the
output back into the input.

570
00:35:58,850 --> 00:36:03,320
In other words, the output
depends not only on the input,

571
00:36:03,320 --> 00:36:06,910
but also on previous values
of the output.

572
00:36:06,910 --> 00:36:10,300
So for example, as I've
stressed previously, a

573
00:36:10,300 --> 00:36:14,930
recursive difference equation
has the general form that I

574
00:36:14,930 --> 00:36:18,710
indicate here, a linear
combination of weighted

575
00:36:18,710 --> 00:36:21,950
outputs on the left-hand side
and linear combination of

576
00:36:21,950 --> 00:36:24,720
weighted inputs on the
right-hand side.

577
00:36:24,720 --> 00:36:30,370
And as we've talked about, we
can solve this equation for

578
00:36:30,370 --> 00:36:34,790
the current output y of n in
terms of current and past

579
00:36:34,790 --> 00:36:38,610
inputs and past outputs.

580
00:36:38,610 --> 00:36:42,550
For example, just to interpret
this, focus on the

581
00:36:42,550 --> 00:36:47,050
interpretation of this as a
filter, let's look at a first

582
00:36:47,050 --> 00:36:50,280
order difference equation, which
we've talked about and

583
00:36:50,280 --> 00:36:52,770
generated the solution
to previously.

584
00:36:52,770 --> 00:36:56,810
So the first order difference
equation would be as I

585
00:36:56,810 --> 00:36:59,220
indicated here.

586
00:36:59,220 --> 00:37:04,150
And imposing causality on this,
so that we assume that

587
00:37:04,150 --> 00:37:08,090
we are running this as a
recursive forward in time, we

588
00:37:08,090 --> 00:37:13,020
can solve this for y of n in
terms of x of n and y of n

589
00:37:13,020 --> 00:37:16,520
minus 1 weighted by
the factor a.

590
00:37:16,520 --> 00:37:20,970
And I simply indicate the
block diagram for this.

591
00:37:20,970 --> 00:37:24,120
But what we want to examine
now for this first order

592
00:37:24,120 --> 00:37:28,400
recursion is the frequency
response and see its

593
00:37:28,400 --> 00:37:30,840
interpretation as a filter.

594
00:37:30,840 --> 00:37:34,330
Well in fact, again, the
mathematics for this we've

595
00:37:34,330 --> 00:37:37,540
gone through in the
last lecture.

596
00:37:37,540 --> 00:37:41,210
And so interpreting the first
order difference equation as a

597
00:37:41,210 --> 00:37:48,130
system, what we're attempting
to generate is the frequency

598
00:37:48,130 --> 00:37:50,730
response, which is the
Fourier transform

599
00:37:50,730 --> 00:37:52,760
of the impulse response.

600
00:37:52,760 --> 00:37:56,080
And from the difference
equation, we can, of course,

601
00:37:56,080 --> 00:38:00,790
solve for either one of those
by using the properties,

602
00:38:00,790 --> 00:38:03,770
exploiting the properties,
of Fourier transform.

603
00:38:03,770 --> 00:38:07,760
Applying the Fourier transform
to the difference equation, we

604
00:38:07,760 --> 00:38:12,060
will end up with the Fourier
transform of the output equal

605
00:38:12,060 --> 00:38:15,530
to the Fourier transform of the
input times this factor,

606
00:38:15,530 --> 00:38:19,160
which we know from the
convolution property, in fact,

607
00:38:19,160 --> 00:38:24,980
is the frequency response
of the system.

608
00:38:24,980 --> 00:38:27,440
So this is the frequency
response.

609
00:38:27,440 --> 00:38:31,290
And of course, the inverse
Fourier transform of that,

610
00:38:31,290 --> 00:38:37,910
which I indicate below, is the
system impulse response.

611
00:38:37,910 --> 00:38:41,430
So we have the frequency
response obtained by applying

612
00:38:41,430 --> 00:38:44,150
the Fourier transform to the
difference equation, the

613
00:38:44,150 --> 00:38:46,190
impulse response.

614
00:38:46,190 --> 00:38:54,200
And, as we did last time, we can
look at that in terms of a

615
00:38:54,200 --> 00:38:56,990
frequency response
characteristic.

616
00:38:56,990 --> 00:39:01,470
And recall that, depending on
whether the factor a is

617
00:39:01,470 --> 00:39:05,560
positive or negative, we either
get a lowpass filter or

618
00:39:05,560 --> 00:39:07,840
a highpass filter.

619
00:39:07,840 --> 00:39:13,170
And if, in fact, we look at the
frequency response for the

620
00:39:13,170 --> 00:39:16,640
factor a being positive, then
we see that this is an

621
00:39:16,640 --> 00:39:22,080
approximation to a lowpass
filter, whereas below it I

622
00:39:22,080 --> 00:39:26,390
show the frequency response
for a negative.

623
00:39:26,390 --> 00:39:32,300
And there this corresponds to
a highpass filter, because

624
00:39:32,300 --> 00:39:36,820
we're attenuating low
frequencies and retaining the

625
00:39:36,820 --> 00:39:39,350
high frequencies.

626
00:39:39,350 --> 00:39:45,110
And recall also that
we illustrated this

627
00:39:45,110 --> 00:39:49,170
characteristic as a lowpass or
highpass filter for the first

628
00:39:49,170 --> 00:39:55,660
order recursion by looking at
how it worked as a filter in

629
00:39:55,660 --> 00:39:59,030
both cases when the input was
the Dow Jones average.

630
00:39:59,030 --> 00:40:02,630
And indeed, we saw that it
generated both lowpass and

631
00:40:02,630 --> 00:40:06,380
highpass filtering in the
appropriate cases.

632
00:40:06,380 --> 00:40:09,880
So for discrete-time, we have
the two classes, moving

633
00:40:09,880 --> 00:40:14,210
average and recursive filters.

634
00:40:14,210 --> 00:40:17,270
And there are a variety of
issues discussed in the text

635
00:40:17,270 --> 00:40:19,960
about why, in certain contexts,
one might want to

636
00:40:19,960 --> 00:40:21,390
use one of the other.

637
00:40:21,390 --> 00:40:24,870
Basically, what happens is that
for the moving average

638
00:40:24,870 --> 00:40:28,660
filter, for a given set a filter
specifications, there

639
00:40:28,660 --> 00:40:31,440
are many more multiplications
required than

640
00:40:31,440 --> 00:40:33,190
for a recursive filter.

641
00:40:33,190 --> 00:40:36,250
But there are, in certain
contexts, some very important

642
00:40:36,250 --> 00:40:41,450
compensating benefits for the
moving average filter.

643
00:40:41,450 --> 00:40:47,320
Now, this concludes, pretty
much, what I want to say in

644
00:40:47,320 --> 00:40:51,200
detail about filtering, the
concept of filtering, in the

645
00:40:51,200 --> 00:40:52,880
set of lectures.

646
00:40:52,880 --> 00:40:57,830
This is only a very quick
glimpse into a very important

647
00:40:57,830 --> 00:41:01,440
and very rich topic, and one, of
course, that can be studied

648
00:41:01,440 --> 00:41:05,250
on its own in an considerable
amount of detail.

649
00:41:05,250 --> 00:41:09,760
As the lectures go on, what
we'll find is that the basic

650
00:41:09,760 --> 00:41:14,570
concept of filtering, both ideal
and nonideal filtering,

651
00:41:14,570 --> 00:41:19,180
will be a very important
part of what we do.

652
00:41:19,180 --> 00:41:24,370
And in particular, beginning
with the next lecture, we'll

653
00:41:24,370 --> 00:41:29,930
turn to a discussion of
modulation, exploiting the

654
00:41:29,930 --> 00:41:33,490
property of modulation
as it relates to

655
00:41:33,490 --> 00:41:35,340
some practical problems.

656
00:41:35,340 --> 00:41:39,280
And what we'll find when we do
that is that a very important

657
00:41:39,280 --> 00:41:42,660
part of that discussion and, in
fact, a very important part

658
00:41:42,660 --> 00:41:48,120
of the use of modulation also
just naturally incorporates

659
00:41:48,120 --> 00:41:51,270
the concept and properties
of filtering.

660
00:41:51,270 --> 00:41:52,520
Thank you.