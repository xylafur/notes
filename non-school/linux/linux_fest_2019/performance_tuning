- What is performance tuning?
    - making your system behaave approprietly
        - not always making it faster
        - focusing on just making it run faster
            - focusing on making it faster can hinder performance

        - sometimes tuning is just about making everything deterministic

    - steps to tuning
        - you make a baseline, how oyour system performs
        - then find your bottleneck, and fix that
        - then the next, and the next, and the next..

- Areas to tune
    - some of this we can fix through OS changes, somethings are hardware
      changes

    - 4 sybsystems
        1. CPU
            - things like balancing cores to threads for a particular process
        2. Memory
            - not alot you can tune
            - if you don't have enough memory, buy more (lol)
            - carve up application to put on different systems or in different
              containers
        3. Disk
            - IO schedules to make things run more quickly
            - How you create the filesystem, blocksize
            - throwing more disks at the problem can give you better
              performance
                - raid/ striping can nlead to better performance

        4. Network
            - nfs can be tuned, buffer sides for read/writes, how buffer
              transfers work

- Make a baseline
    - his advice
        - build an enviornment in development
        - run the application like normally
        - then jot down a log of how everything performs

        - you want to simulate a load simmilar to what it will be like in
          production


    - tools for baseline
        - the power of `ps`
            - see the number of processes
            - the f flag shows you the tree

            - the l flag shows you tings like how much memory a process is
              using

        - the free command  
            - see what is goin on in ur system

            - the buffer is the buffer in the kernel for the file system
                - the linux kernel by default is really aggressive about
                  precaching and keeping stuff in memory

        - top
            - tells you times uesd for shit
                - io weight
                - system time
                - idle time
                - etc

            - when system seems fine, but the app is slow
                - look at a per cpu

                - hit `1` to see an individual view of cpus
                    - you can see the indivdul time weight for each cpu

        - vmstat
            - memory and cpu info
            - tells you about ur memory, swap stuff, io stuff, context switches


        - iostat
            - kinda like vmstat, but more for io usage


        - sar
            - saves info about how ur computer has been used over time
            - tells you things like how the cpu has been used at a particular
              time


        - ss
            - networking info for tuning sockets and stuff like that

            - stop using netstat he says

        - iotop
            - like top, but for io

        - IO scheduler
            - cfq: Completley Fair Queuing schedule
                - default on most distributions

                - tries to be good enough for everything, not specialized

            - noop scheduler
                - good for ssds
                - the simplest IO scheduler for the linux kernel based on FIFO

            - deadline scheduler
                - tries to get things to disk as quick as possible

            -can be changed on a block device basis
                - /sys/block/*/

                - somewhere

        - sysctl
            - a way of managin the tunables that the kernel exposes to the root
              user

            - sysctl.a will give you all of the tunables for the system
            
            - uses /sys and /proc to adjust tunables within the kernel

            - DOES NOT LIST THINGS LIKE SCHEDULING

        - tuned
            - uses udev, dynamically changes kernel tunables, other tunable
              things
           
            - can change things like scheduling as well

            - has a shit tone of modes and things you can tune easily
                - play around with these.
                    - try things out and note the differences
